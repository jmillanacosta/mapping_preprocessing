name: chebi

on:
  workflow_dispatch:
  pull_request:
    paths:
      - '.github/workflows/chebi.yml' # Corrected the path syntax
  schedule:
    - cron: "0 0 1,15 * *"  

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  check_release:
    runs-on: ubuntu-latest
    name: Check latest release date

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download file from Zenodo
        env:
          zenodo_token: ${{ secrets.ZENODO }}
        run: |
          chmod +x datasources/chebi/config
          datasources/chebi/config .
          zenodo_file_id="8348142"
          file_name=$to_check_from_zenodo
          echo "File name: $file_name"
          echo "Downloading from: https://zenodo.org/api/files/${zenodo_file_id}/${file_name}"
          echo "ZENODO_FILE_NAME=$file_name" >> $GITHUB_ENV
          
          curl -H "Authorization: Bearer $zenodo_token" -LJO "https://zenodo.org/api/files/${zenodo_file_id}/${file_name}"          
          ls -l $file_name   

      - name: Check for new ChEBI release
        id: check_download
        run: |
          echo 'Accessing the ChEBI archive'
          wget https://ftp.ebi.ac.uk/pub/databases/chebi/archive/
          . datasources/chebi/config .
          string=$(tail -4 index.html | head -1)
          date_new=$(echo "$string" | grep -oP '<td align="right">\K[0-9-]+\s[0-9:]+(?=\s+</td>)' | awk '{print $1}')
          release=$(echo "$string" | grep -oP '(?<=a href="rel)\d\d\d')
          echo "RELEASE=$release" >> $GITHUB_ENV
          echo "DATE_NEW=$date_new" >> $GITHUB_ENV
          date_old=$date
          timestamp1=$(date -d "$date_new" +%s)
          timestamp2=$(date -d "$date_old" +%s)

          if [ "$timestamp1" -gt "$timestamp2" ]; then
            echo "DOWNLOAD_FILE=true" >> $GITHUB_ENV
            echo "New release available: $release"
          else
            echo "DOWNLOAD_FILE=false" >> $GITHUB_ENV
            echo "No new release available"
          fi
          echo "Date of latest release: $date_new, Date of release of the current version: $date_old"
          rm index.htm*

  process_file:
    name: Download and test latest ChEBI release
    needs: check_release
    runs-on: ubuntu-latest
    steps:
      - name: Download data
        run: |
          wget https://ftp.ebi.ac.uk/pub/databases/chebi/archive/rel${{ env.RELEASE }}/SDF/ChEBI_complete_3star.sdf.gz
          gunzip ChEBI_complete_3star.sdf.gz
          ls
          FILENAME=ChEBI_complete_3star.sdf
          FILESIZE=$(stat -c%s "$FILENAME")
          echo "Size of $FILENAME = $FILESIZE bytes."
          mkdir -p mapping_preprocessing/datasources/chebi/data
          mv ChEBI_complete_3star.sdf mapping_preprocessing/datasources/chebi/data
          
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Test SDF processing
        run: |
          inputFile="mapping_preprocessing/datasources/chebi/data/ChEBI_complete_3star.sdf"
          outputDir="mapping_preprocessing/datasources/chebi/data"
          java -cp target/mapping_prerocessing-0.0.1-jar-with-dependencies.jar org.sec2pri.chebi_sdf "$inputFile" "$outputDir"

          if [ $? -eq 0 ]; then
              echo "Java preprocessing of ChEBI data is done."
              echo "FAILED=false" >> $GITHUB_ENV
          else
              echo "Java preprocessing of ChEBI data failed."
              echo "FAILED=true" >> $GITHUB_ENV
          fi

      - name: Diff versions
        run: |
          old=${{ env.ZENODO_FILE_NAME }}
          new=mapping_preprocessing/datasources/chebi/data/${{ env.ZENODO_FILE_NAME }}
          ids_old=$(cut -f 2 "$old" | sort | tr -d "\r")
          ids_new=$(cut -f 2 "$new" | sort | tr -d "\r")
          diff_ENV=$(diff -u <(echo "$ids_old") <(echo "$ids_new"))
          output_file="diff_ENV.txt"
          added=$(grep '^+CHEBI' "$output_file")
          echo "ADDED=$added" >> $GITHUB_ENV
          removed=$(grep '^-CHEBI' "$output_file")
          echo "REMOVED=$removed" >> $GITHUB_ENV

  post-issue_update:
    needs: process_file
    name: Post issue about updating data
    runs-on: ubuntu-latest
    if: contains(env.DOWNLOAD_FILE, 'true')
    permissions:
      contents: read
      issues: write
    steps:
      - uses: actions/checkout@v3
      - run: |
          echo "---" >> issue.md
          echo "title: Update ChEBI - release on ${{ env.DATE_NEW }}" >> issue.md
          echo "assignees: tabbassidaloii" >> issue.md
          echo "---" >> issue.md
          echo "[New release for ChEBI](https://ftp.ebi.ac.uk/pub/databases/chebi/archive/rel${{ env.RELEASE }}/SDF/) available from ${{ env.DATE_NEW }}." >> issue.md
          echo "## Removed secondary IDs" >> issue.md
          echo "${{ env.REMOVED }}" >> issue.md
          echo "## Added secondary IDs" >> issue.md
          echo "${{ env.ADDED }}" >> issue.md
      - uses: JasonEtco/create-an-issue@v2
        with:
          filename: issue.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  post-issue-fail:
    needs: process_file
    if: contains(env.FAILED, 'true')
    name: Post issue about failed test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
    steps:
      - uses: actions/checkout@v3
      - run: |
          echo "---" >> issue.md
          echo "title: Failed ChEBI processing for release ${{ env.RELEASE }}" >> issue.md
          echo "assignees: tabbassidaloii" >> issue.md
          echo "---" >> issue.md
          echo "Processing failed for the [new release for ChEBI](https://ftp.ebi.ac.uk/pub/databases/chebi/archive/rel${{ env.RELEASE }}/SDF/) available from ${{ env.DATE_NEW }}." >> issue.md
      - uses: JasonEtco/create-an-issue@v2
        with:
          filename: issue.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
